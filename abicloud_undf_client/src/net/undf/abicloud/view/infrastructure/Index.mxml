<?xml version="1.0" encoding="utf-8"?>

<!--
/*
* The contents of this file are subject to the Common Public Attribution License

* Version 1.0 (the "License"); you may not use this file except in compliance
* with the License. You may obtain a copy of the License at http://cpal.abiquo.com.



* The License is based on the Mozilla Public License Version 1.1 but Sections 14
* and 15 have been added to cover use of software over a computer network and
* provide for limited attribution for the Original Developer. In addition,



* Exhibit A has been modified to be consistent with Exhibit B.
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License



* for the specific language governing rights and limitations under the License.
*
* The Original Code is abiquo,  14 Jul 2008. The Original Developer is the
* Initial Developer. The Initial Developer of the Original Code is Soluciones Grid,



* S.L.. All portions of the code are Copyright Â© Soluciones Grid, S.L.
* All Rights Reserved.
*/

-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:infrastructure="net.undf.abicloud.view.infrastructure.*"
		 implements="net.undf.abicloud.view.main.IBodyComponent"
		 width="100%" height="100%"
		 show="onShow()" hide="onHide()">
		   
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import net.undf.abicloud.vo.infrastructure.DataCenter;
			import mx.events.ItemClickEvent;
			
			/////////////////////////////////////
			//IBodyComponent implementation
			
			public function hasUnsavedChanges():Boolean
			{
				return false;
			}
			
			public function saveChanges():void
			{
				
			}
			
			public function discardUnsavedChanges():void
			{
				
			}
		
			/**
			 * When this component shows
			 **/	
			private function onShow():void
			{
				//When this component is shown, the component in the viewstack is also shown
				infrastructureVS.selectedIndex = 0;
				dataCentersManagement.onShow();
			}
			
			/**
			 * When this component hides
			 * It is important that this function is called when this component
			 * is not longer being showed, since there are components with background calls to server
			 * that should be stopped when they are no longer necesary
			 */
			private function onHide():void
			{
				infrastructureManagement.stopBackgroundUpdates();
			}
			
			/**
			 * Tiggered when user selects a Data Center
			 * We have to access to its infrastructure
			 **/
			private function onDataCenterSelected(event:ItemClickEvent):void
			{					
				infrastructureManagement.dataCenter = event.item as DataCenter;
				infrastructureVS.selectedIndex = 1;
			}
			
			/**
			 * Shows again the Data Centers management component
			 **/
			private function goBackToDataCenters():void
			{
				infrastructureVS.selectedIndex = 0;
				infrastructureManagement.stopBackgroundUpdates();
			}
		]]>
	</mx:Script>
	
	
	<mx:ViewStack id="infrastructureVS"
				  width="100%" height="100%"
				  creationPolicy="all">
		
		<infrastructure:DataCenterManagement id="dataCentersManagement"
			dataCenterSelected="onDataCenterSelected(event)"/>
		
		<infrastructure:InfrastructureManagement id="infrastructureManagement"
			backToDataCenters="goBackToDataCenters()"/>
		
	</mx:ViewStack>
	
</mx:VBox>
