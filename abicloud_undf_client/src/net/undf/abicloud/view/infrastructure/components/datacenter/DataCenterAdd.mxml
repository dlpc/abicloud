<?xml version="1.0" encoding="utf-8"?>

<!--
/*
* The contents of this file are subject to the Common Public Attribution License

* Version 1.0 (the "License"); you may not use this file except in compliance
* with the License. You may obtain a copy of the License at http://cpal.abiquo.com.



* The License is based on the Mozilla Public License Version 1.1 but Sections 14
* and 15 have been added to cover use of software over a computer network and
* provide for limited attribution for the Original Developer. In addition,



* Exhibit A has been modified to be consistent with Exhibit B.
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License



* for the specific language governing rights and limitations under the License.
*
* The Original Code is abiquo,  14 Jul 2008. The Original Developer is the
* Initial Developer. The Initial Developer of the Original Code is Soluciones Grid,



* S.L.. All portions of the code are Copyright Â© Soluciones Grid, S.L.
* All Rights Reserved.
*/

-->
<AbiCloudPopUp xmlns="net.undf.abicloud.view.common.*" xmlns:mx="http://www.adobe.com/2006/mxml"
			   titleText="@Resource(bundle='Infrastructure', key='POPUP_TITLE_DATACENTERADD')">
	
	<mx:Metadata>
		[Event(name="dataCenterAddClose", type="flash.events.Event")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import net.undf.abicloud.model.AbiCloudModel;
			import net.undf.abicloud.events.InfrastructureEvent;
			import net.undf.abicloud.vo.infrastructure.DataCenter;
			
			/**
			 * Initializes Form items
			 **/
			public function init():void
			{
				//Cleaning form
				nameInput.text = "";
				situationInput.text = "";
				
				acceptButton.enabled = false;
				nameInput.setFocus();
			}
			
			/** 
			 * Saves information and Notifys that user wants to create a new Data Center
			 */
			private function onAccept():void
			{
				//Creating the new Data Center
				var dataCenter:DataCenter = new DataCenter();
				dataCenter.name = nameInput.text;
				dataCenter.situation = situationInput.text;
				
				//Announcing that user wants to create a new data center
				var event:InfrastructureEvent = new InfrastructureEvent(InfrastructureEvent.CREATE_DATACENTER);
				event.dataCenter = dataCenter;
				dispatchEvent(event);
				
				//Closing the form
				dispatchEvent(new Event("dataCenterAddClose"));
			}
			
			/**
			 * Cancels Data Center creation
			 **/
			private function onCancel():void
			{
				//Closing the form
				dispatchEvent(new Event("dataCenterAddClose"));
			}
			
			
			 /**
			 * Activates the Accept Button if the form is valid
			 **/
			 private function validateForm():void
			 {
			 	if(nameInput.text.length > 0
			 	   && situationInput.text.length > 0)
			 	    acceptButton.enabled = true;
			 	   
			 	else
			 		acceptButton.enabled = false;
			 }
			
			/**
			 * Basic behaivour is as follows:
			 * If user presses the Enter, in any part of this Pop Up (except buttons), it would be
			 * like Accept Button has been pressed
			 */
			 
			override protected function keyboardHandler(keyboardEvent:KeyboardEvent):void
			{
				if(keyboardEvent.target == acceptButton || keyboardEvent.target == cancelButton)
					super.keyboardHandler(keyboardEvent);
				else
				{
					if(keyboardEvent.keyCode == 13 && acceptButton.enabled)
						onAccept();
				}
			}
		]]>
	</mx:Script>
	
	 <mx:Form paddingTop="3">
	 	
		<mx:FormItem label="@Resource(bundle='Common', key='TEXTINPUT_LABEL_NAME')" required="true">
			<mx:TextInput id="nameInput" maxChars="19"
					      change="validateForm()" height="20"/>
		</mx:FormItem>
		
		<mx:FormItem label="@Resource(bundle='Infrastructure', key='TEXTINPUT_LABEL_SITUATION')" required="true">
			<mx:TextArea id="situationInput" maxChars="19"
						 change="validateForm()"/>
		</mx:FormItem>
		
		<mx:FormItem direction="horizontal">
			<mx:Button id="acceptButton" label="@Resource(bundle='Common', key='BUTTON_ACCEPT')" 
					   click="onAccept()" height="18"/>
			
			<mx:Button id="cancelButton" label="@Resource(bundle='Common', key='BUTTON_CANCEL')"
					   click="onCancel()"  styleName="buttonGris" height="18"/>
		</mx:FormItem>
	</mx:Form>
	
</AbiCloudPopUp>
