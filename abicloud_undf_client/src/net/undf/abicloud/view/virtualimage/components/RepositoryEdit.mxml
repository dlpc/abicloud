<?xml version="1.0" encoding="utf-8"?>

<!--
/*
* The contents of this file are subject to the Common Public Attribution License

* Version 1.0 (the "License"); you may not use this file except in compliance
* with the License. You may obtain a copy of the License at http://cpal.abiquo.com.



* The License is based on the Mozilla Public License Version 1.1 but Sections 14
* and 15 have been added to cover use of software over a computer network and
* provide for limited attribution for the Original Developer. In addition,



* Exhibit A has been modified to be consistent with Exhibit B.
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License



* for the specific language governing rights and limitations under the License.
*
* The Original Code is abiquo,  14 Jul 2008. The Original Developer is the
* Initial Developer. The Initial Developer of the Original Code is Soluciones Grid,



* S.L.. All portions of the code are Copyright Â© Soluciones Grid, S.L.
* All Rights Reserved.
*/

-->
<AbiCloudPopUp xmlns="net.undf.abicloud.view.common.*" xmlns:mx="http://www.adobe.com/2006/mxml"
			   titleText="@Resource(bundle='VirtualImage', key='POPUP_TITLE_REPOSITORY_EDIT')">
	
	<mx:Metadata>
		[Event(name="repositoryEditClose", type="flash.events.Event")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.utils.ObjectUtil;
			import net.undf.abicloud.events.VirtualImageEvent;
			import net.undf.abicloud.vo.virtualimage.VirtualImage;
			import net.undf.abicloud.vo.virtualimage.Repository;
			
			//The Repository that will be edited
			private var _repository:Repository;
			private var _oldRepository:Repository;
			
			/**
			 * Initializes this component to create a new Repository
			 **/
			public function init(repository:Repository):void
			{
				this._oldRepository = repository;
				this._repository = ObjectUtil.copy(this._oldRepository) as Repository;
				
				//Initializing the form
				nameInput.text = this._repository.name;
				urlInput.text = this._repository.URL;
				
				nameInput.setFocus();
			}
			
			
			/**
			 * When user clicks Accept button, we save the changes made to the repository
			 **/
			 private function onAccept():void
			 {
			 	this._repository.name = nameInput.text;
			 	this._repository.URL = urlInput.text;
			 	
			 	//Announcing that user wants to create a new Repository
			 	var event:VirtualImageEvent = new VirtualImageEvent(VirtualImageEvent.EDIT_REPOSITORY);
			 	event.repository = this._repository;
			 	event.oldRepository = this._oldRepository;
			 	dispatchEvent(event);
			 	
			 	//Closing the form
			 	dispatchEvent(new Event("repositoryEditClose"));
			 }
			 
			 /**
			 * Cancels Repository edition
			 **/
			 private function onCancel():void
			 {
			 	//Closing the form
				dispatchEvent(new Event("repositoryEditClose"));
			 }
			 
			 /**
			 * Activates the Accept Button if the form is valid
			 **/
			 private function validateForm():void
			 {
			 	if(nameInput.text.length > 0
			 	   && urlInput.text.length > 0)
			 	    acceptButton.enabled = true;
			 	   
			 	else
			 		acceptButton.enabled = false;
			 }
			 
			 /**
			 * Basic behaivour is as follows:
			 * If user presses the Enter, in any part of this Pop Up (except buttons), it would be
			 * like Accept Button has been pressed
			 */
			override protected function keyboardHandler(keyboardEvent:KeyboardEvent):void
			{
				if(keyboardEvent.target == acceptButton || keyboardEvent.target == cancelButton)
					super.keyboardHandler(keyboardEvent);
				else
				{
					if(keyboardEvent.keyCode == 13 && acceptButton.enabled)
						onAccept();
				}
			}
		]]>
	</mx:Script>
	
	<mx:Form paddingTop="3">
		<mx:FormItem label="@Resource(bundle='Common', key='TEXTINPUT_LABEL_NAME')" required="true" enabled="false">
			<mx:TextInput id="nameInput" maxChars="29"
					      change="validateForm()" height="20"/>
		</mx:FormItem>
		
		<mx:FormItem label="@Resource(bundle='VirtualImage', key='TEXTINPUT_LABEL_URL')" required="true">
			<mx:TextArea id="urlInput" maxChars="49"
					     change="validateForm()"/>
		</mx:FormItem>
		
		
		<mx:FormItem direction="horizontal">
			<mx:Button id="acceptButton" label="@Resource(bundle='Common', key='BUTTON_ACCEPT')" 
					   click="onAccept()" height="18"/>
			
			<mx:Button id="cancelButton" label="@Resource(bundle='Common', key='BUTTON_CANCEL')"
					   click="onCancel()" height="18" styleName="buttonGris"/>
		</mx:FormItem>
	</mx:Form>

</AbiCloudPopUp>
