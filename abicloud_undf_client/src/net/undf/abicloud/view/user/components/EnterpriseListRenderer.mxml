<?xml version="1.0" encoding="utf-8"?>

<!--
/*
* The contents of this file are subject to the Common Public Attribution License

* Version 1.0 (the "License"); you may not use this file except in compliance
* with the License. You may obtain a copy of the License at http://cpal.abiquo.com.



* The License is based on the Mozilla Public License Version 1.1 but Sections 14
* and 15 have been added to cover use of software over a computer network and
* provide for limited attribution for the Original Developer. In addition,



* Exhibit A has been modified to be consistent with Exhibit B.
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License



* for the specific language governing rights and limitations under the License.
*
* The Original Code is abiquo,  14 Jul 2008. The Original Developer is the
* Initial Developer. The Initial Developer of the Original Code is Soluciones Grid,



* S.L.. All portions of the code are Copyright Â© Soluciones Grid, S.L.
* All Rights Reserved.
*/

-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		 width="200" backgroundColor="#FFFFFF" backgroundAlpha="0"
		 styleName="EnterpriseListRenderer"
		 verticalScrollPolicy="off" horizontalScrollPolicy="off"
		 dragEnter="dragEnterHandler(event)"
		 dragDrop="dragDropHandler(event)">

	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import net.undf.abicloud.events.UserEvent;
			import mx.utils.ObjectUtil;
			import mx.managers.DragManager;
			import net.undf.abicloud.vo.user.User;
			import mx.events.DragEvent;
			import net.undf.abicloud.vo.user.Enterprise;
			
			//The Enterprise to be rendered by this component
			[Bindable]
			private var _enterprise:Enterprise;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				
				if(value && value is Enterprise)
					this._enterprise = value as Enterprise;
				
			}
			
			/**
			 * A EnterpriseListRenderer accepts drops of Users
			 */
			private function dragEnterHandler(dragEvent:DragEvent):void
			{
				if(dragEvent.dragSource.hasFormat("User") && this._enterprise)
				{
					var userDragged:User = dragEvent.dragSource.dataForFormat("User") as User;
					if(userDragged.enterprise.id != this._enterprise.id)
					{
						DragManager.acceptDragDrop(this);
						DragManager.showFeedback(DragManager.MOVE);
					}
				}
			}
			
			/**
			 * When user drops a User inside this EnterpriseListRenderer,
			 * the User will be assigned to the Enterprise that represents this component
			 */
			private function dragDropHandler(dragEvent:DragEvent):void
			{
				var userDragged:User = dragEvent.dragSource.dataForFormat("User") as User;
				var userCopy:User = ObjectUtil.copy(userDragged) as User;
				userCopy.enterprise = this._enterprise;
				
				var userEvent:UserEvent = new UserEvent(UserEvent.EDIT_USERS);
				userEvent.oldUsers = new ArrayCollection([userDragged]);
				userEvent.users = new ArrayCollection([userCopy]);
				dispatchEvent(userEvent);
			}
		]]>
	</mx:Script>
	<mx:Label text="{this._enterprise.name}" maxWidth="190"
			  truncateToFit="true"/>
</mx:Canvas>
